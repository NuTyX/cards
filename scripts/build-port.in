#!/usr/bin/env bash
#  SPDX-License-Identifier: LGPL-2.1-or-later

print_help()
{
	echo "usage: $COLLECTION [option]"
	echo "options:"
	echo "   -a,   --all                 will build all the ports of the '$COLLECTION' collection in the right order"
	echo "  -cb,   --check-binaries      check if binaries are uptodate"
	echo "   -d,   --dry                 check if binaries are different then the ports but dont build anything"
	echo "   -h,   --help                print help and exit"
	echo "   -v,   --version             print version and exit"
}
check_binaries()
{
	local name file
	if [ ! -d ${BINARY_BASE} ]; then
		echo "The directory ${BINARY_BASE} doesn't exist"
		exit 1
	fi
	for name in $(ls ${BINARY_BASE}|cut -d "." -f1|uniq)
	do
		if [ ! -d $COLLECTION/$name ]; then
			echo "'$name' packages should be removed and delete from the .REPO file"
			for file in $(ls $name.*)
			do
				rm -v $file
			done
			sed -i "/^@$name.*/,/^$/d" $PKGMK_REPO_FILE
		fi
	done
	cd - > /dev/null
}
parse_options() {
	if [ $# -lt 1 ]; then
		print_help
		exit 0
	fi
	while [ "$1" ]; do
		case $1 in
			-a|--all)
				check_binaries
				build_binaries
				exit 0
				;;
			-cb|--check-binaries)
				check_binaries
				exit 0
				;;
			-d|--dry)
				DRY="yes"
				check_binaries
				build_binaries
				exit 0
				;;
			-h|--help)
				print_help
				exit 0;;

			-v|--version)
				echo "$COLLECTION $BUILD_PORT_VERSION"
                exit 0 ;;

			*)
				if [ ! -d "$COLLECTION/$1" ]; then
					echo "I dont know the port $1"
					exit 1
				fi
				;;

		esac
		shift
	done
}
get_port_version() {
	unset version
 	unset release
	. $COLLECTION/$package/Pkgfile
	[ -z $release ] && release=1
	echo "$version-$release"
}
build_binaries () {
	local package
 	cd $GIT
	if [ -n "$(cards level|grep WARNING|head -1)" ]; then
		cards level
		exit 1;
	fi
	for package in $(cards level | grep " $COLLECTION/"|cut -d "/" -f2)
	do
		if [  -z "$(ls ${BINARY_BASE}/$package*.cards-* 2>/dev/null )" ];then
			[ "$DRY" == "yes" ] && continue
			cards create -r $package || exit 1
			continue
		fi
		port_version=$(get_port_version $package)
		binary_version=$(cards info -v $package)
		if [ "$port_version" != "${binary_version}" ]; then
			echo "$package: Port: $port_version, Binary: $binary_version"
			[ "$DRY" == "yes" ] && continue
			cards create $package || exit 1
			continue
		fi
		[ "$DRY" == "yes" ] || echo "WILL NOT BUILD '$package' AGAIN.."
	done
}
main() {
	if [ ! -d .git ] && [ ! -d scripts ]; then
		echo "Make shure you are at the root of the git"
		echo "Your are in: $GIT"
		exit 1
	fi
	if [ ! -d "$COLLECTION" ]; then
		echo "I dont know the collection $COLLECTION"
		exit 1
	fi
	parse_options "$@"
	cards create -r $1
}
PKGMK_REPO_FILE=.REPO
BUILD_PORT_VERSION=#VERSION#
DRY="no"
COLLECTION="$(basename $0)"
GIT="$PWD"
BINARY_BASE=/DEPOT/$COLLECTION
main "$@"
